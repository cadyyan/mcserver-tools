#!/usr/bin/env python

"""
Command line script for working with a Minecraft server
"""

from __future__ import print_function

import argparse

import mcserver

def print_verbose(args, format, *vargs, **kwargs):
	if not args.is_verbose:
		return

	print(format.format(*vargs, **kwargs))

def handler_start_server(args):
	"""
	Start the Minecraft server
	"""

	mcserver.setup_logging(args.is_verbose)
	mcserver.start_server(args.server_dir, args.is_verbose)

def add_command(name, parser, handler):
	"""
	Add command line command
	"""

	command_parser = parser.add_parser(name)

	command_parser.add_argument('--dir', '-d',
						dest = 'server_dir',
						type = str,
						default = '.',
						help = 'The server directory. Defaults to current directory')

	command_parser.add_argument('--verbose', '-v',
						dest = 'is_verbose',
						action = 'store_true',
						help = 'Make output more berbose')

	command_parser.set_defaults(func = handler)

	return command_parser

def get_command_args():
	"""
	Get the command line arguments
	"""

	parser = argparse.ArgumentParser(
		description = 'Command line manager for Minecraft Servers')

	subparsers = parser.add_subparsers(title = 'Command')

	start_parser = add_command('start', subparsers, handler_start_server)
	start_parser.add_argument('--daemon',
							  dest = 'is_daemon',
							  action = 'store_true',
							  help = 'Start the server as a daemon')

	return parser.parse_args()

def main():
	"""
	Main method of the script
	"""

	args = get_command_args()
	args.func(args)

if __name__ == '__main__':
	main()
